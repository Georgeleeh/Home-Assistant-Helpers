alias: Toggle Light with Time-Based Settings (Manual Color Mode)
mode: single
fields:
  target_light:
    name: Target Light(s)
    required: true
    selector:
      target:
        entity:
          domain: light
  color_mode:
    name: Color Mode
    required: true
    selector:
      select:
        options:
          - rgb
          - mired
          - brightness
sequence:
  - variables:
      # Handle both raw entity_id string and structured target object
      raw_ids: >
        {% if target_light.entity_id is defined %}
          {{ target_light.entity_id }}
        {% else %}
          {{ target_light }}
        {% endif %}
      light_entities: "{{ expand(raw_ids) | map(attribute='entity_id') | list }}"
      primary_entity: "{{ light_entities[0] if light_entities else none }}"
      light_state: "{{ states(primary_entity) if primary_entity else 'unknown' }}"
      user_mode: "{{ color_mode }}"
      now_time: "{{ now().strftime('%H:%M:%S') }}"
      morning_start: "{{ states('input_datetime.morning_start') }}"
      evening_start: "{{ states('input_datetime.evening_start') }}"
      night_start: "{{ states('input_datetime.night_start') }}"
      morning_brightness: "{{ states('input_number.morning_brightness') | int }}"
      evening_brightness: "{{ states('input_number.evening_brightness') | int }}"
      night_brightness: "{{ states('input_number.night_brightness') | int }}"
      morning_rgb: "{{ states('input_text.morning_rgb') | from_json }}"
      evening_rgb: "{{ states('input_text.evening_rgb') | from_json }}"
      night_rgb: "{{ states('input_text.night_rgb') | from_json }}"
      morning_color_temp: "{{ states('input_number.morning_color_temp') | int }}"
      evening_color_temp: "{{ states('input_number.evening_color_temp') | int }}"
      night_color_temp: "{{ states('input_number.night_color_temp') | int }}"
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ light_state == 'off' }}"
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ morning_start <= now_time < evening_start }}"
                sequence:
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ user_mode == 'rgb' }}"
                        sequence:
                          - service: light.turn_on
                            target: "{{ target_light }}"
                            data:
                              brightness: "{{ morning_brightness }}"
                              rgb_color: "{{ morning_rgb }}"
                      - conditions:
                          - condition: template
                            value_template: "{{ user_mode == 'mired' }}"
                        sequence:
                          - service: light.turn_on
                            target: "{{ target_light }}"
                            data:
                              brightness: "{{ morning_brightness }}"
                              color_temp: "{{ morning_color_temp }}"
                      - conditions:
                          - condition: template
                            value_template: "{{ user_mode == 'brightness' }}"
                        sequence:
                          - service: light.turn_on
                            target: "{{ target_light }}"
                            data:
                              brightness: "{{ morning_brightness }}"
              - conditions:
                  - condition: template
                    value_template: "{{ evening_start <= now_time < night_start }}"
                sequence:
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ user_mode == 'rgb' }}"
                        sequence:
                          - service: light.turn_on
                            target: "{{ target_light }}"
                            data:
                              brightness: "{{ evening_brightness }}"
                              rgb_color: "{{ evening_rgb }}"
                      - conditions:
                          - condition: template
                            value_template: "{{ user_mode == 'mired' }}"
                        sequence:
                          - service: light.turn_on
                            target: "{{ target_light }}"
                            data:
                              brightness: "{{ evening_brightness }}"
                              color_temp: "{{ evening_color_temp }}"
                      - conditions:
                          - condition: template
                            value_template: "{{ user_mode == 'brightness' }}"
                        sequence:
                          - service: light.turn_on
                            target: "{{ target_light }}"
                            data:
                              brightness: "{{ evening_brightness }}"
              - conditions:
                  - condition: template
                    value_template: "{{ now_time >= night_start or now_time < morning_start }}"
                sequence:
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ user_mode == 'rgb' }}"
                        sequence:
                          - service: light.turn_on
                            target: "{{ target_light }}"
                            data:
                              brightness: "{{ night_brightness }}"
                              rgb_color: "{{ night_rgb }}"
                      - conditions:
                          - condition: template
                            value_template: "{{ user_mode == 'mired' }}"
                        sequence:
                          - service: light.turn_on
                            target: "{{ target_light }}"
                            data:
                              brightness: "{{ night_brightness }}"
                              color_temp: "{{ night_color_temp }}"
                      - conditions:
                          - condition: template
                            value_template: "{{ user_mode == 'brightness' }}"
                        sequence:
                          - service: light.turn_on
                            target: "{{ target_light }}"
                            data:
                              brightness: "{{ night_brightness }}"
    default:
      - service: light.turn_off
        target: "{{ target_light }}"
